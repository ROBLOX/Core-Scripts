<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="ModuleScript" referent="RBX54AF403FDF86481C8A957949FBE7F81D">
		<Properties>
			<string name="Name">DPad</string>
			<ProtectedString name="Source">--[[
&#9;// FileName: DPad
&#9;// Written by: jmargh
&#9;// Description: Implements DPad controls for touch devices
--]]

local Players = game:GetService(&apos;Players&apos;)

local DPad = {}

--[[ Script Variables ]]--
while not Players.LocalPlayer do
&#9;wait()
end
local LocalPlayer = Players.LocalPlayer
local CachedHumanoid = nil
local DPadFrame = nil
local TouchObject = nil
local OnInputEnded = nil&#9;&#9;-- defined in Create()

--[[ Constants ]]--
local DPAD_SHEET = &quot;rbxasset://textures/ui/DPadSheet.png&quot;
local COMPASS_DIR = {
&#9;Vector3.new(1, 0, 0),&#9;&#9;&#9;-- E
&#9;Vector3.new(1, 0, 1).unit,&#9;&#9;-- SE
&#9;Vector3.new(0, 0, 1),&#9;&#9;&#9;-- S
&#9;Vector3.new(-1, 0, 1).unit,&#9;&#9;-- SW
&#9;Vector3.new(-1, 0, 0),&#9;&#9;&#9;-- W
&#9;Vector3.new(-1, 0, -1).unit,&#9;-- NW
&#9;Vector3.new(0, 0, -1),&#9;&#9;&#9;-- N
&#9;Vector3.new(1, 0, -1).unit,&#9;&#9;-- NE
}

--[[ lua Function Cache ]]--
local ATAN2 = math.atan2
local FLOOR = math.floor
local PI = math.pi

--[[ Local Functions ]]--
local function createArrowLabel(name, position, size, rectOffset, rectSize)
&#9;local image = Instance.new(&apos;ImageLabel&apos;)
&#9;image.Name = name
&#9;image.Image = DPAD_SHEET
&#9;image.ImageRectOffset = rectOffset
&#9;image.ImageRectSize = rectSize
&#9;image.BackgroundTransparency = 1
&#9;image.Size = size
&#9;image.Position = position
&#9;image.Parent = DPadFrame
&#9;
&#9;return image
end

local function getCenterPosition()
&#9;return Vector2.new(DPadFrame.AbsolutePosition.x + DPadFrame.AbsoluteSize.x/2, DPadFrame.AbsolutePosition.y + DPadFrame.AbsoluteSize.y/2)
end

local function getHumanoid()
&#9;local character = LocalPlayer and LocalPlayer.Character
&#9;if character then
&#9;&#9;if CachedHumanoid and CachedHumanoid.Parent == character then
&#9;&#9;&#9;return CachedHumanoid
&#9;&#9;else
&#9;&#9;&#9;CachedHumanoid = nil
&#9;&#9;&#9;for _,child in pairs(character:GetChildren()) do
&#9;&#9;&#9;&#9;if child:IsA(&apos;Humanoid&apos;) then
&#9;&#9;&#9;&#9;&#9;CachedHumanoid = child
&#9;&#9;&#9;&#9;&#9;return CachedHumanoid
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

--[[ Public API ]]--
function DPad:Enable()
&#9;DPadFrame.Visible = true
end

function DPad:Disable()
&#9;DPadFrame.Visible = false
&#9;OnInputEnded()
end

function DPad:Create(parentFrame)
&#9;if DPadFrame then
&#9;&#9;DPadFrame:Destroy()
&#9;&#9;DPadFrame = nil
&#9;end
&#9;
&#9;local position = UDim2.new(0, 10, 1, -230)
&#9;DPadFrame = Instance.new(&apos;Frame&apos;)
&#9;DPadFrame.Name = &quot;DPadFrame&quot;
&#9;DPadFrame.Active = true
&#9;DPadFrame.Visible = false
&#9;DPadFrame.Size = UDim2.new(0, 192, 0, 192)
&#9;DPadFrame.Position = position
&#9;DPadFrame.BackgroundTransparency = 1
&#9;
&#9;local smArrowSize = UDim2.new(0, 23, 0, 23)
&#9;local lgArrowSize = UDim2.new(0, 64, 0, 64)
&#9;local smImgOffset = Vector2.new(46, 46)
&#9;local lgImgOffset = Vector2.new(128, 128)
&#9;
&#9;local bBtn = createArrowLabel(&quot;BackButton&quot;, UDim2.new(0.5, -32, 1, -64), lgArrowSize, Vector2.new(0, 0), lgImgOffset)
&#9;local fBtn = createArrowLabel(&quot;ForwardButton&quot;, UDim2.new(0.5, -32, 0, 0), lgArrowSize, Vector2.new(0, 258), lgImgOffset)
&#9;local lBtn = createArrowLabel(&quot;LeftButton&quot;, UDim2.new(0, 0, 0.5, -32), lgArrowSize, Vector2.new(129, 129), lgImgOffset)
&#9;local rBtn = createArrowLabel(&quot;RightButton&quot;, UDim2.new(1, -64, 0.5, -32), lgArrowSize, Vector2.new(0, 129), lgImgOffset)
&#9;local jumpBtn = createArrowLabel(&quot;JumpButton&quot;, UDim2.new(0.5, -32, 0.5, -32), lgArrowSize, Vector2.new(129, 0), lgImgOffset)
&#9;local flBtn = createArrowLabel(&quot;ForwardLeftButton&quot;, UDim2.new(0, 35, 0, 35), smArrowSize, Vector2.new(129, 258), smImgOffset)
&#9;local frBtn = createArrowLabel(&quot;ForwardRightButton&quot;, UDim2.new(1, -55, 0, 35), smArrowSize, Vector2.new(176, 258), smImgOffset)
&#9;flBtn.Visible = false
&#9;frBtn.Visible = false
&#9;
&#9;-- input connections
&#9;jumpBtn.InputBegan:connect(function(inputObject)
&#9;&#9;local character = LocalPlayer.Character
&#9;&#9;if character then
&#9;&#9;&#9;local humanoid = getHumanoid()
&#9;&#9;&#9;if humanoid then
&#9;&#9;&#9;&#9;humanoid.Jump = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;
&#9;local movementVector = nil
&#9;local function normalizeDirection(inputPosition)
&#9;&#9;local jumpRadius = jumpBtn.AbsoluteSize.x/2
&#9;&#9;local centerPosition = getCenterPosition()
&#9;&#9;local direction = Vector2.new(inputPosition.x - centerPosition.x, inputPosition.y - centerPosition.y)
&#9;&#9;
&#9;&#9;if direction.magnitude &gt; jumpRadius then
&#9;&#9;&#9;local angle = ATAN2(direction.y, direction.x)
&#9;&#9;&#9;local octant = (FLOOR(8 * angle / (2 * PI) + 8.5)%8) + 1
&#9;&#9;&#9;movementVector = COMPASS_DIR[octant]
&#9;&#9;end
&#9;&#9;
&#9;&#9;if not flBtn.Visible and movementVector == COMPASS_DIR[7] then
&#9;&#9;&#9;flBtn.Visible = true
&#9;&#9;&#9;frBtn.Visible = true
&#9;&#9;end
&#9;end
&#9;
&#9;DPadFrame.InputBegan:connect(function(inputObject)
&#9;&#9;if TouchObject or inputObject.UserInputType ~= Enum.UserInputType.Touch then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;
&#9;&#9;TouchObject = inputObject
&#9;&#9;normalizeDirection(TouchObject.Position)
&#9;&#9;if LocalPlayer then
&#9;&#9;&#9;LocalPlayer:Move(movementVector, true)
&#9;&#9;end
&#9;end)
&#9;
&#9;DPadFrame.InputChanged:connect(function(inputObject)
&#9;&#9;if inputObject == TouchObject then
&#9;&#9;&#9;normalizeDirection(TouchObject.Position)
&#9;&#9;&#9;if LocalPlayer then
&#9;&#9;&#9;&#9;LocalPlayer:Move(movementVector, true)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;
&#9;OnInputEnded = function()
&#9;&#9;TouchObject = nil
&#9;&#9;flBtn.Visible = false
&#9;&#9;frBtn.Visible = false
&#9;&#9;if LocalPlayer then
&#9;&#9;&#9;movementVector = Vector3.new(0, 0, 0)
&#9;&#9;&#9;LocalPlayer:Move(movementVector, true)
&#9;&#9;end
&#9;end
&#9;
&#9;DPadFrame.InputEnded:connect(function(inputObject)
&#9;&#9;if inputObject == TouchObject then
&#9;&#9;&#9;OnInputEnded()
&#9;&#9;end
&#9;end)
&#9;
&#9;DPadFrame.Parent = parentFrame
end

return DPad
</ProtectedString>
		</Properties>
	</Item>
</roblox>